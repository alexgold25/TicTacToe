<?xml version="1.0" encoding="utf-8"?>
<Window x:Class="TicTacToe.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="TicTacToe"
        Width="480" Height="600"
        MinWidth="460" MinHeight="560"
        Background="#0E1116">

    <!-- Hotkeys -->
    <Window.InputBindings>
        <KeyBinding Key="N" Command="{Binding NewGameCommand}" />
        <KeyBinding Key="H" Command="{Binding SetHumanCommand}" />
        <KeyBinding Key="C" Command="{Binding SetComputerCommand}" />
    </Window.InputBindings>

    <Window.Resources>

        <!-- built-in converter: bool -> Visibility -->
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>

        <!-- Top bar button -->
        <Style x:Key="TopButton" TargetType="Button">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#E6EAF2"/>
            <Setter Property="Background" Value="#1C2230"/>
            <Setter Property="BorderBrush" Value="#2C3446"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Margin" Value="0,0,10,8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="bd" CornerRadius="10"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="#232B3D"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="#2A344A"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Top bar toggle -->
        <Style x:Key="TopToggle" TargetType="ToggleButton">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#E6EAF2"/>
            <Setter Property="Background" Value="#1C2230"/>
            <Setter Property="BorderBrush" Value="#2C3446"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Margin" Value="0,0,10,8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="bd" CornerRadius="10"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="#232B3D"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="#2A344A"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bd" Property="BorderBrush" Value="#5CA6FF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Base cell style -->
        <Style x:Key="CellButtonStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="Segoe UI Semibold"/>
            <Setter Property="FontSize" Value="44"/>
            <Setter Property="Foreground" Value="#E6EAF2"/>
            <Setter Property="Background" Value="#1A202C"/>
            <Setter Property="BorderBrush" Value="#2B3242"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="6"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="bd" CornerRadius="14"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="#232A3A"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="#2B3446"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="bd" Property="Opacity" Value="0.65"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Pop-in animation style -->
        <Style x:Key="PopInOnContent" TargetType="Button" BasedOn="{StaticResource CellButtonStyle}">
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Content" Value="X">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                 From="0.6" To="1" Duration="0:0:0.12"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                 From="0.6" To="1" Duration="0:0:0.12"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
                <Trigger Property="Content" Value="O">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                 From="0.6" To="1" Duration="0:0:0.12"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                 From="0.6" To="1" Duration="0:0:0.12"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
                <!-- disable when occupied -->
                <Trigger Property="Content" Value="X">
                    <Setter Property="IsEnabled" Value="False"/>
                </Trigger>
                <Trigger Property="Content" Value="O">
                    <Setter Property="IsEnabled" Value="False"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Winning cell style: neon-like glow -->
        <Style x:Key="WinningCellStyle" TargetType="Button" BasedOn="{StaticResource PopInOnContent}">
            <Style.Triggers>
                <Trigger Property="Tag" Value="True">
                    <Setter Property="Background" Value="#21344C"/>
                    <Setter Property="BorderBrush" Value="#5CA6FF"/>
                    <Setter Property="Foreground" Value="#FFFFFF"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="#5CA6FF" BlurRadius="18" ShadowDepth="0" Opacity="0.9"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Status text -->
        <Style x:Key="StatusText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#B9C0CE"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

    </Window.Resources>

    <Grid Margin="16">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Top bar: perfect alignment with Grid -->
        <Grid Grid.Row="0" Margin="0,0,0,12">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Left: controls -->
            <StackPanel Orientation="Horizontal" Grid.Column="0" VerticalAlignment="Center">
                <Button Style="{StaticResource TopButton}"
            Content="New Game"
            Command="{Binding NewGameCommand}"/>

                <ToggleButton Style="{StaticResource TopToggle}"
                  IsChecked="{Binding PlayVsRandom}"
                  Content="{Binding ModeText}"/>

                <CheckBox Content="Sound" Margin="8,0,0,0"
              Foreground="#B9C0CE"
              VerticalAlignment="Center"
              IsChecked="{Binding SoundEnabled}"/>
            </StackPanel>

            <!-- Right: status and scores -->
            <StackPanel Orientation="Horizontal" Grid.Column="1"
              HorizontalAlignment="Right" VerticalAlignment="Center">
                <TextBlock Style="{StaticResource StatusText}"
               Margin="0,0,12,0"
               VerticalAlignment="Center"
               TextTrimming="CharacterEllipsis"
               Text="{Binding Status}"/>
                <TextBlock Style="{StaticResource StatusText}"
               Margin="0,0,8,0"
               VerticalAlignment="Center"
               TextTrimming="CharacterEllipsis"
               Text="{Binding ScoresText}"/>
                <Button Style="{StaticResource TopButton}"
            Content="Reset scores"
            Command="{Binding ResetScoresCommand}"/>
            </StackPanel>
        </Grid>

        <!-- Board with overlay win line -->
        <Viewbox Grid.Row="1" Stretch="Uniform">
            <Grid Width="360" Height="360">
                <!-- board cells -->
                <Border Background="#121722" Padding="10" CornerRadius="16"
                BorderBrush="#1E2636" BorderThickness="1">
                    <UniformGrid Rows="3" Columns="3">
                        <Button Style="{StaticResource WinningCellStyle}"
                    Content="{Binding BoardView[0]}"
                    Tag="{Binding Highlight[0]}"
                    Command="{Binding MakeMoveCommand}" CommandParameter="0"/>
                        <Button Style="{StaticResource WinningCellStyle}"
                    Content="{Binding BoardView[1]}"
                    Tag="{Binding Highlight[1]}"
                    Command="{Binding MakeMoveCommand}" CommandParameter="1"/>
                        <Button Style="{StaticResource WinningCellStyle}"
                    Content="{Binding BoardView[2]}"
                    Tag="{Binding Highlight[2]}"
                    Command="{Binding MakeMoveCommand}" CommandParameter="2"/>
                        <Button Style="{StaticResource WinningCellStyle}"
                    Content="{Binding BoardView[3]}"
                    Tag="{Binding Highlight[3]}"
                    Command="{Binding MakeMoveCommand}" CommandParameter="3"/>
                        <Button Style="{StaticResource WinningCellStyle}"
                    Content="{Binding BoardView[4]}"
                    Tag="{Binding Highlight[4]}"
                    Command="{Binding MakeMoveCommand}" CommandParameter="4"/>
                        <Button Style="{StaticResource WinningCellStyle}"
                    Content="{Binding BoardView[5]}"
                    Tag="{Binding Highlight[5]}"
                    Command="{Binding MakeMoveCommand}" CommandParameter="5"/>
                        <Button Style="{StaticResource WinningCellStyle}"
                    Content="{Binding BoardView[6]}"
                    Tag="{Binding Highlight[6]}"
                    Command="{Binding MakeMoveCommand}" CommandParameter="6"/>
                        <Button Style="{StaticResource WinningCellStyle}"
                    Content="{Binding BoardView[7]}"
                    Tag="{Binding Highlight[7]}"
                    Command="{Binding MakeMoveCommand}" CommandParameter="7"/>
                        <Button Style="{StaticResource WinningCellStyle}"
                    Content="{Binding BoardView[8]}"
                    Tag="{Binding Highlight[8]}"
                    Command="{Binding MakeMoveCommand}" CommandParameter="8"/>
                    </UniformGrid>
                </Border>

                <!-- overlay win line -->
                <Canvas IsHitTestVisible="False">
                    <Line X1="{Binding WinX1}" Y1="{Binding WinY1}"
                X2="{Binding WinX2}" Y2="{Binding WinY2}"
                Stroke="#5CA6FF" StrokeThickness="6"
                StrokeEndLineCap="Round" StrokeStartLineCap="Round"
                Opacity="0.9"
                Visibility="{Binding WinLineVisible, Converter={StaticResource BoolToVis}}"/>
                    <Line X1="{Binding WinX1}" Y1="{Binding WinY1}"
                X2="{Binding WinX2}" Y2="{Binding WinY2}"
                Stroke="#5CA6FF" StrokeThickness="12"
                Opacity="0.35"
                StrokeEndLineCap="Round" StrokeStartLineCap="Round"
                Visibility="{Binding WinLineVisible, Converter={StaticResource BoolToVis}}"/>
                </Canvas>
            </Grid>
        </Viewbox>

        <TextBlock Grid.Row="2" Style="{StaticResource StatusText}"
               Text="Hotkeys: N = New, H = Human, C = Computer."
               Margin="2,12,2,0"/>
    </Grid>
</Window>
