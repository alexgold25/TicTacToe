@implements IDisposable
@inject TicTacToe.Blazor.Services.GameService S

<div class="top">
    <button class="btn" @onclick="S.NewGame">New Game</button>

    <!-- Переключатель режима отдельной кнопкой -->
    <button class="btn" @onclick="ToggleMode">
        @(S.PlayVsRandom ? "Vs Computer" : "Vs Human")
    </button>

    <!-- Независимый чекбокс звука -->
    <label class="toggle">
        <input type="checkbox" @bind="S.SoundEnabled" />
        <span>Sound</span>
    </label>

    <span class="status">Turn: @S.TurnText</span>
    <span class="score">@S.ScoresText</span>
</div>

<div class="board">
    @for (int i = 0; i < 9; i++)
    {
        var occupied = !string.IsNullOrEmpty(S.View[i]);
        var cls = "cell" + (S.Highlight[i] ? " win" : "");
        <button class="@cls"
                disabled="@occupied"
                @onclick="(() => S.MakeMove(i))">
            @S.View[i]
        </button>
    }
    @if (S.WinLine is { } line)
    {
        <svg class="win-line" viewBox="0 0 3 3">
            <line x1="@line.X1" y1="@line.Y1" x2="@line.X2" y2="@line.Y2" />
        </svg>
    }
</div>

@code {
    protected override void OnInitialized()
    {
        // один раз подписываемся на изменения сервиса
        S.Changed += StateHasChanged;
    }
    public void Dispose()
    {
        S.Changed -= StateHasChanged;
    }

    private void ToggleMode()
    {
        S.PlayVsRandom = !S.PlayVsRandom;
        S.NewGame(); // перезапуск при смене режима
    }
}
